name: CI Pipeline

on:
  push:
    branches: [ development ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package.json

    - name: Install Dependencies
      run: npm i --force

    - name: Set Up Environment Variables
      run: |
        touch .env
        echo "REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}" >> .env
        echo "REACT_APP_API_PYTHON_URL=${{ secrets.REACT_APP_API_PYTHON_URL }}" >> .env
        echo "REACT_APP_ENV=${{ secrets.REACT_APP_ENV }}" >> .env
        echo "REACT_APP_MAINTENANCE_MODE=${{ secrets.REACT_APP_MAINTENANCE_MODE }}" >> .env
        echo "REACT_APP_PUSHER_KEY=${{ secrets.REACT_APP_PUSHER_KEY }}" >> .env
        echo "REACT_APP_STRIPE_PRIVATE_KEY=${{ secrets.REACT_APP_STRIPE_PRIVATE_KEY }}" >> .env
        echo "REACT_APP_TAWK_KEY=${{ secrets.REACT_APP_TAWK_KEY }}" >> .env
        echo "REACT_APP_TINYMCE_APIKEY=${{ secrets.REACT_APP_TINYMCE_APIKEY }}" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> .env
        echo "DEVELOPER_TOKEN=${{ secrets.DEVELOPER_TOKEN }}" >> .env
        echo "CUSTOMER_ID=${{ secrets.CUSTOMER_ID }}" >> .env
        echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
      shell: bash

    - name: Build Project
      env:
        REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
        REACT_APP_API_PYTHON_URL: ${{ secrets.REACT_APP_API_PYTHON_URL }}
        REACT_APP_ENV: ${{ secrets.REACT_APP_ENV }}
        REACT_APP_MAINTENANCE_MODE: ${{ secrets.REACT_APP_MAINTENANCE_MODE }}
        REACT_APP_PUSHER_KEY: ${{ secrets.REACT_APP_PUSHER_KEY }}
        REACT_APP_STRIPE_PRIVATE_KEY: ${{ secrets.REACT_APP_STRIPE_PRIVATE_KEY }}
        REACT_APP_TAWK_KEY: ${{ secrets.REACT_APP_TAWK_KEY }}
        REACT_APP_TINYMCE_APIKEY: ${{ secrets.REACT_APP_TINYMCE_APIKEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        DEVELOPER_TOKEN: ${{ secrets.DEVELOPER_TOKEN }}
        CUSTOMER_ID: ${{ secrets.CUSTOMER_ID }}
        REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
      run: SKIP_PREFLIGHT_CHECK=true CI=false NODE_OPTIONS="--max-old-space-size=4096" npm run build

  
    - name: Verify Build Output
      run: ls -lah build/
      
    - name: Move Build Files
      run: |
        mkdir -p $GITHUB_WORKSPACE/react-nest-razorcopy
        rsync -avz ./build/ $GITHUB_WORKSPACE/react-nest-razorcopy/ --exclude node_modules

    - name: Verify Moved Files
      run: ls -lah $GITHUB_WORKSPACE/react-nest-razorcopy/

    - name: Deploy via SCP
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass && sshpass -p "${{ secrets.SFTP_PASSWORD }}" scp -o StrictHostKeyChecking=no -r react-nest-razorcopy/* ${{ secrets.SFTP_USER }}@${{ secrets.SFTP_HOST }}:/data/docker-data/react-nest-razorcopy/
        
